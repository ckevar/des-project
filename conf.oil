/* ###*B*###
 * ERIKA Enterprise - a tiny RTOS for small microcontrollers
 *
 * Copyright (C) 2002-2013  Evidence Srl
 *
 * This file is part of ERIKA Enterprise.
 *
 * ERIKA Enterprise is free software; you can redistribute it
 * and/or modify it under the terms of the GNU General Public License
 * version 2 as published by the Free Software Foundation, 
 * (with a special exception described below).
 *
 * Linking this code statically or dynamically with other modules is
 * making a combined work based on this code.  Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * As a special exception, the copyright holders of this library give you
 * permission to link this code with independent modules to produce an
 * executable, regardless of the license terms of these independent
 * modules, and to copy and distribute the resulting executable under
 * terms of your choice, provided that you also meet, for each linked
 * independent module, the terms and conditions of the license of that
 * module.  An independent module is a module which is not derived from
 * or based on this library.  If you modify this code, you may extend
 * this exception to your version of the code, but you are not
 * obligated to do so.  If you do not wish to do so, delete this
 * exception statement from your version.
 *
 * ERIKA Enterprise is distributed in the hope that it will be
 * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License version 2 for more details.
 *
 * You should have received a copy of the GNU General Public License
 * version 2 along with ERIKA Enterprise; if not, write to the
 * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 * Boston, MA 02110-1301 USA.
 * ###*E*### */

/*
 * Simple demo that shows how to use the USART peripheral.
 *
 * Author: 2013  Gianluca Franchino.
 *
 */

CPU mySystem {

	OS myOs {

		EE_OPT = "DEBUG";
		EE_OPT = "__SEM__";
		//EE_OPT = "__KEIL_4_54_OLDER__";
		EE_OPT = "__KEIL_USE_AXF_EXT__";
		EE_OPT = "_MDEV_USE_LEDS_";
		EE_OPT = "_MDEV_USE_LCD35RT_";
		EE_OPT = "_MDEV_USE_SSD2119_";
		EE_OPT = "_MDEV_USE_DMA_";
		EE_OPT = "_MDEV_USE_NET_";
		EE_OPT = "_MDEV_USE_UART_";
		EE_OPT = "_MDEV_USE_ESP8266_";

		CPU_DATA = CORTEX_MX {
			MODEL = M4;
			APP_SRC = "code.c";
			//COMPILER_TYPE = KEIL; 
			COMPILER_TYPE = GNU;
			/*
			MULTI_STACK = TRUE {
				IRQ_STACK = TRUE {
					SYS_SIZE=512;
				};
			};
			*/
			MULTI_STACK = TRUE;
		};

		EE_OPT = "__USE_SYSTICK__";

		MCU_DATA = STM32 {
			MODEL = STM32F4xx;
		};

		EE_OPT = "__ADD_LIBS__";
		
		LIB = ENABLE { NAME = "ST_CMSIS"; };
		
		LIB = ENABLE { NAME = "STM32F4XX_SPD"; 
			STM32F4XX_SPD = ENABLE {
                		USEUSART = TRUE;
                		USEMISC = TRUE;
						USEI2C = TRUE;
                		USEDMA = TRUE;
						USESDIO = TRUE;
            		};
		};
		
		LIB = ENABLE {
			NAME = "STM32F4_DISCOVERY";
			STM32F4_DISCOVERY = ENABLE {
                USELEDS = TRUE;
                USELCD = TRUE;
                USELCDLOG = TRUE;
        		USESD = TRUE; 
		      	USECOM = TRUE;
			};			
		};

		STATUS = EXTENDED;
		STARTUPHOOK = FALSE;
		ERRORHOOK = FALSE;
		SHUTDOWNHOOK = FALSE;
		PRETASKHOOK = FALSE;
		POSTTASKHOOK = FALSE;
		USEGETSERVICEID = FALSE;
		USEPARAMETERACCESS = FALSE;
		USERESSCHEDULER = FALSE;

		KERNEL_TYPE = FP;
	};
 	
	COUNTER myCounter;

	/*
	ALARM Alarm_ESP8266_FSM {
		COUNTER = myCounter;
		ACTION = ACTIVATETASK { TASK = Task_ESP8266_FSM;};
	};
	*/
	
	ALARM Alarm_mnet_service {
		COUNTER = myCounter;
		ACTION = ACTIVATETASK { TASK = Task_mnet_service; };
	};
	
	/*
	ALARM AlarmTaskLCDTouch {
		COUNTER = myCounter;
		ACTION = ACTIVATETASK { TASK = TaskLCDTouch; };
	};
	*/

	ALARM Alarm_ledblue {
		COUNTER = myCounter;
		ACTION = ACTIVATETASK {TASK = Task_ledblue; };
	};

	TASK Task_ESP8266_FSM {
		PRIORITY = 0x02;   /* Low priority */
		AUTOSTART = FALSE;
		STACK = SHARED;
		ACTIVATION = 1;    /* only one pending activation */
		SCHEDULE = FULL;
	};
	TASK mnet_service {
		PRIORITY = 0x01;   /* Low priority */
		AUTOSTART = FALSE;
		STACK = SHARED;
		ACTIVATION = 1;    /* only one pending activation */
		SCHEDULE = FULL;
	};
	TASK TaskLCDTouch {
		PRIORITY = 0x03;   /* Low priority */
		AUTOSTART = FALSE;
		STACK = SHARED;
		ACTIVATION = 1;    /* only one pending activation */
		SCHEDULE = FULL;
	};

	TASK Task_ledblue {
		PRIORITY = 0x03;   /* Low priority */
		AUTOSTART = FALSE;
		STACK = SHARED;
		ACTIVATION = 1;    /* only one pending activation */
		SCHEDULE = FULL;
	};

	ISR systick_handler {
		CATEGORY = 2;
		ENTRY = "SYSTICK";
		PRIORITY = 1;
	};

	// Memory 2 memory, LCD
	ISR DMA2_Stream0_IRQHandler {
		CATEGORY = 1;
		ENTRY = "DMA2_STREAM0";
		PRIORITY = 3;
	};

	// UART6 RX
	ISR DMA2_Stream1_IRQHandler {
		CATEGORY = 1;
		ENTRY = "DMA2_STREAM1";
		PRIORITY = 2;
	};
	// UART6 TX
	ISR DMA2_Stream6_IRQHandler {
		CATEGORY = 1;
		ENTRY = "DMA2_STREAM6";
		PRIORITY = 2;
	};

	ISR SDIO_IRQHandler{
		CATEGORY = 1;
		ENTRY = "SDIO";
		PRIORITY = 2;
	};

};
